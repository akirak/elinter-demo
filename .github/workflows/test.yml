name: 'Demo'
on:
  pull_request:
    paths:
      - .github/workflows/test.yml
  push:
    branches:
      - master
    paths:
      - .github/workflows/test.yml
jobs:
  demo:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        nixpkgs_channel:
        - nixos-20.03-small
        - nixos-20.09-small
        - nixos-unstable-small
    steps:
    - uses: cachix/install-nix-action@v14
      with:
        nix_path: nixpkgs=channel:${{ matrix.nixpkgs_channel }}

    - name: Set up binary cache
      run: nix-env -iA cachix -f https://cachix.org/api/v1/install && cachix use emacs-ci

    # Install and configure elinter
    - name: Install elinter
      run: nix-env -if https://github.com/akirak/elinter/archive/v4.tar.gz
    - name: Configure elinter
      run: |
        echo "ELINTER_LINTERS=checkdoc check-declare package-lint melpazoid" >> $GITHUB_ENV
        echo "EMACS_VERSION=27.1" >> $GITHUB_ENV

    # Demo

    - name: Check out lsp-dart
      uses: actions/checkout@v2.3.5
      with:
        repository: akirak/lsp-dart
        ref: elinter
        path: lsp-dart
    - run: elinter --ert-runner
      working-directory: ./lsp-dart
      env:
        ELINTER_ALLOW_WARNINGS: melpazoid

    - name: Check out reformatter.el
      uses: actions/checkout@v2.3.5
      with:
        repository: akirak/reformatter.el
        ref: elinter
        path: reformatter.el
    - run: nix-shell -p shfmt --run 'elinter --ert -- reformatter-tests.el'
      working-directory: ./reformatter.el

    - name: Check out dhall-mode
      uses: actions/checkout@v2.3.5
      with:
        repository: akirak/dhall-mode
        ref: elinter
        path: dhall-mode
    - run: elinter
      working-directory: ./dhall-mode
